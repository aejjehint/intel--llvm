; Check that v64(expand from v32) builtins are used.

; RUN: SATest -BUILD --config=%S/math-relaxed-f32.tst.cfg -tsize=64 -cpuarch=skx -llvm-option=-print-after=sycl-kernel-relaxed-math -dump-llvm-file %t.ll 2>&1 | FileCheck %s -check-prefixes=CHECK,CHECK-RM
; RUN: FileCheck %s --input-file=%t.ll -check-prefix=CHECK-SVML

; RUN: SATest -BUILD --config=%S/math-relaxed-f32.tst.cfg -tsize=64 -cpuarch=core-avx2 -llvm-option=-print-after=sycl-kernel-relaxed-math 2>&1 | FileCheck %s -check-prefixes=CHECK,CHECK-RM

; CHECK-RM: call{{.*}} <64 x float> @_Z6cos_rmDv64_f(<64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z6exp_rmDv64_f(<64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z7exp2_rmDv64_f(<64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z8exp10_rmDv64_f(<64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z6log_rmDv64_f(<64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z7log2_rmDv64_f(<64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z6pow_rmDv64_fS_(<64 x float> {{.*}}, <64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z6sin_rmDv64_f(<64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z6tan_rmDv64_f(<64 x float> {{.*}})
; CHECK-RM: call{{.*}} <64 x float> @_Z9sincos_rmDv64_fPf(<64 x float> {{.*}}, {{.*}})
; CHECK-RM: call{{.*}} float @_Z6cos_rmf(float {{.*}})
; CHECK-RM: call{{.*}} float @_Z6exp_rmf(float {{.*}})
; CHECK-RM: call{{.*}} float @_Z7exp2_rmf(float {{.*}})
; CHECK-RM: call{{.*}} float @_Z8exp10_rmf(float {{.*}})
; CHECK-RM: call{{.*}} float @_Z6log_rmf(float {{.*}})
; CHECK-RM: call{{.*}} float @_Z7log2_rmf(float {{.*}})
; CHECK-RM: call{{.*}} float @_Z6pow_rmff(float {{.*}}, float {{.*}})
; CHECK-RM: call{{.*}} float @_Z6sin_rmf(float {{.*}})
; CHECK-RM: call{{.*}} float @_Z6tan_rmf(float {{.*}})
; CHECK-RM: call{{.*}} float @_Z9sincos_rmfPf(float {{.*}}, {{.*}})

; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}cos{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}cos{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}exp{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}exp{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z7}}exp2{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z7}}exp2{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z8}}exp10{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z8}}exp10{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}log{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}log{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z7}}log2{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z7}}log2{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}pow{{f32_rm|_rmDv32_fS_}}(<32 x float> {{.*}}, <32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}pow{{f32_rm|_rmDv32_fS_}}(<32 x float> {{.*}}, <32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}sin{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}sin{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}tan{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}tan{{f32_rm|_rmDv32_f}}(<32 x float> {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z9}}sincos{{f32_rm|_rmDv32_fPS_}}(<32 x float> {{.*}}, {{.*}})
; CHECK-SVML: call{{.*}} <32 x float> @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z9}}sincos{{f32_rm|_rmDv32_fPS_}}(<32 x float> {{.*}}, {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}cos{{f1_rm|_rmf}}(float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}exp{{f1_rm|_rmf}}(float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z7}}exp2{{f1_rm|_rmf}}(float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z8}}exp10{{f1_rm|_rmf}}(float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}log{{f1_rm|_rmf}}(float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z7}}log2{{f1_rm|_rmf}}(float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}pow{{f1_rm|_rmff}}(float {{.*}}, float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}sin{{f1_rm|_rmf}}(float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z6}}tan{{f1_rm|_rmf}}(float {{.*}})
; CHECK-SVML: call{{.*}} float @{{__ocl_svml_x0_|__ocl_svml_z0_|_Z9}}sincos{{f1_rm|_rmfPf}}(float {{.*}}, {{.*}})

; CHECK: Test program was successfully built
