; Check that v32 and v64 builtins are used.

; RUN: SATest -BUILD --config=%s.cfg -tsize=32 -cpuarch="skx" -llvm-option=-print-after=vplan-vec 2>&1 | FileCheck %s -check-prefixes=CHECK,CHECK32
; RUN: SATest -BUILD --config=%s.cfg -tsize=64 -cpuarch="skx" -llvm-option=-print-after=vplan-vec 2>&1 | FileCheck %s -check-prefixes=CHECK,CHECK64

; CHECK32: call <32 x i64> @_Z3absDv32_l(<32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z8abs_diffDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z7add_satDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z4haddDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z5rhaddDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z5clampDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z3clzDv32_l(<32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z6mad_hiDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z7mad_satDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z3maxDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z3minDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z6mul_hiDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z6rotateDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z7sub_satDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z8popcountDv32_l(<32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z3ctzDv32_l(<32 x i64> noundef {{.*}})
; CHECK32: call <32 x i64> @_Z3absDv32_lDv32_m(<32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z8abs_diffDv32_lS_Dv32_m(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z7add_satDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z4haddDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z5rhaddDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z5clampDv32_lS_S_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z3clzDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z6mad_hiDv32_lS_S_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z7mad_satDv32_lS_S_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z3maxDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z3minDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z6mul_hiDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z6rotateDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z7sub_satDv32_lS_S_(<32 x i64> noundef {{.*}}, <32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z8popcountDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> {{.*}})
; CHECK32: call <32 x i64> @_Z3ctzDv32_lS_(<32 x i64> noundef {{.*}}, <32 x i64> {{.*}})

; CHECK64: call <64 x i64> @_Z3absDv64_l(<64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z8abs_diffDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z7add_satDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z4haddDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z5rhaddDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z5clampDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z3clzDv64_l(<64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z6mad_hiDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z7mad_satDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z3maxDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z3minDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z6mul_hiDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z6rotateDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z7sub_satDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z8popcountDv64_l(<64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z3ctzDv64_l(<64 x i64> noundef {{.*}})
; CHECK64: call <64 x i64> @_Z3absDv64_lDv64_m(<64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z8abs_diffDv64_lS_Dv64_m(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z7add_satDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z4haddDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z5rhaddDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z5clampDv64_lS_S_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z3clzDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z6mad_hiDv64_lS_S_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z7mad_satDv64_lS_S_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z3maxDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z3minDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z6mul_hiDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z6rotateDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z7sub_satDv64_lS_S_(<64 x i64> noundef {{.*}}, <64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z8popcountDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> {{.*}})
; CHECK64: call <64 x i64> @_Z3ctzDv64_lS_(<64 x i64> noundef {{.*}}, <64 x i64> {{.*}})

; CHECK: Test program was successfully built.
