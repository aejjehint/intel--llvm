; Check that v64(expand from v32) builtins are used.

; Disable the test in debug build since CHECK-SVML will be complicated.
; UNSUPPORTED: debug-build

; RUN: SATest -BUILD --config=%S/math-f64.tst.cfg -tsize=64 -cpuarch="skx" -llvm-option=-print-after=vplan-vec -dump-llvm-file %t.ll 2>&1 | FileCheck %s -check-prefixes=CHECK,CHECK-VPLAN
; RUN: FileCheck %s --input-file=%t.ll -check-prefix=CHECK-SVML

; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4acosDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5acoshDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z6acospiDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4asinDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5asinhDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z6asinpiDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4atanDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5atan2Dv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5atanhDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z6atanpiDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z7atan2piDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4cbrtDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4ceilDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z8copysignDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3cosDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4coshDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5cospiDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4erfcDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3erfDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3expDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4exp2Dv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5exp10Dv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5expm1Dv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4fabsDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4fdimDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5floorDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3fmaDv64_dS_S_(<64 x double> {{.*}}, <64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4fmaxDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4fmaxDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4fminDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4fminDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4fmodDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5hypotDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x i32> @_Z5ilogbDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5ldexpDv64_dDv64_i(<64 x double> {{.*}}, <64 x i32> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z6lgammaDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3logDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4log2Dv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5log10Dv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5log1pDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4logbDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3madDv64_dS_S_(<64 x double> {{.*}}, <64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z6maxmagDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z6minmagDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3nanDv64_m(<64 x i64> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z9nextafterDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3powDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4pownDv64_dDv64_i(<64 x double> {{.*}}, <64 x i32> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4powrDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z9remainderDv64_dS_(<64 x double> {{.*}}, <64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4rintDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5rootnDv64_dDv64_i(<64 x double> {{.*}}, <64 x i32> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5roundDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5rsqrtDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3sinDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4sinhDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5sinpiDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4sqrtDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z3tanDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z4tanhDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5tanpiDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z6tgammaDv64_d(<64 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <64 x double> @_Z5truncDv64_d(<64 x double> {{.*}})

; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan216(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan216(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan216(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan216(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan2pi16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan2pi16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan2pi16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan2pi16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cbrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cbrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cbrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cbrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erfc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erfc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erfc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erfc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erf16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erf16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erf16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erf16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_expm116(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_expm116(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_expm116(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_expm116(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_fmod16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_fmod16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_fmod16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_fmod16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_hypot16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_hypot16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_hypot16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_hypot16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_ldexp16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_ldexp16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_ldexp16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_ldexp16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_lgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_lgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_lgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_lgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1p16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1p16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1p16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1p16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_logb16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_logb16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_logb16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_logb16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_nextafter16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_nextafter16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_nextafter16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_nextafter16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pow16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pow16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pow16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pow16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pown16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pown16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pown16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pown16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_powr16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_powr16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_powr16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_powr16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_remainder16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_remainder16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_remainder16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_remainder16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rootn16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rootn16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rootn16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rootn16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_round16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_round16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_round16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_round16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rsqrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rsqrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rsqrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rsqrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} <64 x double> @llvm.sqrt.v64f64(<64 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_trunc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_trunc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_trunc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_trunc16(<16 x double> {{.*}})

; CHECK: Test program was successfully built
