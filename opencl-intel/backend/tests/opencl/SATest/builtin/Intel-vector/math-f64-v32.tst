; Check that v32 builtins are used.

; Disable the test in debug build since CHECK-SVML will be complicated.
; UNSUPPORTED: debug-build

; RUN: SATest -BUILD --config=%S/math-f64.tst.cfg -tsize=32 -cpuarch="skx" -llvm-option=-print-after=vplan-vec -dump-llvm-file %t.ll 2>&1 | FileCheck %s -check-prefixes=CHECK,CHECK-VPLAN
; RUN: FileCheck %s --input-file=%t.ll -check-prefix=CHECK-SVML

; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4acosDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5acoshDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z6acospiDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4asinDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5asinhDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z6asinpiDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4atanDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5atan2Dv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5atanhDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z6atanpiDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z7atan2piDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4cbrtDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4ceilDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z8copysignDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3cosDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4coshDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5cospiDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4erfcDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3erfDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3expDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4exp2Dv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5exp10Dv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5expm1Dv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4fabsDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4fdimDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5floorDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3fmaDv32_dS_S_(<32 x double> {{.*}}, <32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4fmaxDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4fmaxDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4fminDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4fminDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4fmodDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5hypotDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x i32> @_Z5ilogbDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5ldexpDv32_dDv32_i(<32 x double> {{.*}}, <32 x i32> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z6lgammaDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3logDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4log2Dv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5log10Dv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5log1pDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4logbDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3madDv32_dS_S_(<32 x double> {{.*}}, <32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z6maxmagDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z6minmagDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3nanDv32_m(<32 x i64> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z9nextafterDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3powDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4pownDv32_dDv32_i(<32 x double> {{.*}}, <32 x i32> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4powrDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z9remainderDv32_dS_(<32 x double> {{.*}}, <32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4rintDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5rootnDv32_dDv32_i(<32 x double> {{.*}}, <32 x i32> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5roundDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5rsqrtDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3sinDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4sinhDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5sinpiDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4sqrtDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z3tanDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z4tanhDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5tanpiDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z6tgammaDv32_d(<32 x double> {{.*}})
; CHECK-VPLAN: call{{.*}} <32 x double> @_Z5truncDv32_d(<32 x double> {{.*}})

; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_acospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_asinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan216(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan216(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan2pi16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_atan2pi16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cbrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cbrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cos16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cosh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_cospi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erfc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erfc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erf16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_erf16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_exp1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_expm116(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_expm116(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_fmod16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_fmod16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_hypot16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_hypot16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_ldexp16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_ldexp16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_lgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_lgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log216(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1016(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1p16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_log1p16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_logb16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_logb16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_nextafter16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_nextafter16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pow16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pow16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pown16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_pown16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_powr16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_powr16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_remainder16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_remainder16(<16 x double> {{.*}}, <16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rootn16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rootn16(<16 x double> {{.*}}, <16 x i32> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_round16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_round16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rsqrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_rsqrt16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sin16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_sinpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} <32 x double> @llvm.sqrt.v32f64(<32 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tan16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanh16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tanpi16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_tgamma16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_trunc16(<16 x double> {{.*}})
; CHECK-SVML: call{{.*}} intel_ocl_bicc_avx512 <16 x double> @__ocl_svml_{{[xz]}}0_trunc16(<16 x double> {{.*}})

; CHECK: Test program was successfully built
